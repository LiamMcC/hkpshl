var express = require('express');

var router = express.Router();
var bodyParser = require("body-parser") // call body parser module and make use of it
router.use(bodyParser.urlencoded({extended:true}));
var db = require('../db');
router.use(require('./user'))
// function to render the home page


const multer = require('multer');
const path = require('path');
const sharp = require('sharp')
const fs = require('fs');


const storage = multer.diskStorage({
  destination: function(req, file, cb) {
   
      cb(null, './uploads');
  },
 
  filename: function(req, file, cb) {
   
      cb(null, file.fieldname + '-' + Date.now() + path.extname(file.originalname));
  }
});
 
var upload = multer({ storage: storage })



function isLoggedIn(req, res, next) {

	// if user is authenticated in the session, carry on
	if (req.isAuthenticated())
    
		return next();

	// if they aren't redirect them to the home page
	res.redirect('/');
}

function isAdmin(req, res, next) {

	// if user is authenticated in the session, carry on
	if (req.user.adminRights)
		return next();

	// if they aren't redirect them to the home page
	res.redirect('/');
}

router.get('/administration', isLoggedIn, isAdmin, function(req, res){

    
    res.render('adminpage', {user: req.user});
    
  });

  router.get('/addabout', function(req, res){

    
    res.render('addabout', {user: req.user});
    
  });




  

  router.post('/addabout',upload.single("image"), async function(req, res){


    const { filename: image } = req.file;
       
    await sharp(req.file.path)
        .resize(500, 500)
        .jpeg({ quality: 90 })
        .toFile(
            path.resolve(req.file.destination,'../resized',image)
        )
        fs.unlinkSync(req.file.path)

    var peewee = req.body.description
    var newpeewe = peewee.replace(/(?:\r\n|\r|\n)/g, '<br>')
    // ***** Note to have these preformatted in EJS use <%- instead of <%=
    let sql = 'INSERT INTO about (Title, Description, Image, ImageTitle, summary, babyBit,bubble) VALUES (?,?,?,?,?,?,?)';
    let query = db.query(sql, [req.body.title, newpeewe, req.file.filename, req.body.imagetitle, req.body.blurb, req.body.babybit, req.body.bubble],(err,res) => {
        
        if(err) throw err;
        
       
        
    });
    
    res.redirect('/administration');
  });
  
// ******************** Test Route REMOVE ************
  router.post('/banana', upload.single('image'),async (req, res,next) => {
    const { filename: image } = req.file;
    console.log("******* " + req.file.path)
    

    await sharp(req.file.path).resize(200, 200).jpeg({ quality: 90 }).toFile(
         path.resolve(req.file.destination,'./uploads/resized',image)
     )
     fs.unlinkSync(req.file.path)
    
    res.redirect('/banana');
});


router.get('/banana', function(req, res){

    
  res.render('banana', {user: req.user});
  
});

// ******************** Test Route REMOVE ************

  module.exports = router;